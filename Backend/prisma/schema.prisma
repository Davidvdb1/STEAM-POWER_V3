generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String
  email    String @unique
  password String
  role     Role
}

model Camp {
  id        String     @id @default(uuid())
  name      String
  startDate DateTime
  endDate   DateTime
  startTime String
  endTime   String
  minAge    Int
  maxAge    Int
  picture   String
  archived  Boolean    @default(false)
  address   String
  workshops Workshop[]
}

model Workshop {
  id       String  @id @default(uuid())
  html     String
  title    String
  campId   String?
  archived Boolean @default(false)
  position Int
  camp     Camp?   @relation(fields: [campId], references: [id])
}

model Group {
  id         String       @id @default(uuid())
  name       String       @unique
  members    String       @default("")
  microbitId String       @default("")
  code       String       @unique @default(dbgenerated("substring(md5(random()::text), 1, 6)"))
  energyData EnergyData[]
  bonusScore Int          @default(0)
  answers    Answer[]
}

model EnergyData {
  id      String     @id @default(uuid())
  groupId String
  time    DateTime   @default(now())
  type    EnergyType
  value   Int
  group   Group      @relation(fields: [groupId], references: [id])
  pin     Int
}

enum Role {
  ADMIN
  TEACHER
}

enum EnergyType {
  SOLAR
  WATER
  WIND
}

model Question {
  id            String   @id @default(uuid())
  title         String
  description   String
  windQuestion  String
  waterQuestion String
  solarQuestion String
  picture       String
  maxTries      Int      @default(0)
  wattage       Int
  score         Int
  active        Boolean  @default(true)
  answers       Answer[]
}

model Answer {
  id            String   @id @default(uuid())
  groupId       String
  questionId    String
  isCorrect     Boolean
  answerValue   Int
  energyReading Int
  group         Group    @relation(fields: [groupId], references: [id])
  question      Question @relation(fields: [questionId], references: [id])
  errorMargin   Float @default(0)
}
